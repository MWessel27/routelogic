],
travelMode: 'DRIVING',
unitSystem: google.maps.UnitSystem.IMPERIAL,
avoidHighways: false,
avoidTolls: false
}, function(response, status) {
if (status !== 'OK') {
  alert('Error was: ' + status);
} else {
  var originList = response.originAddresses;
  var destinationList = response.destinationAddresses;
  var outputDiv = document.getElementById('output');
  outputDiv.innerHTML = '';
  deleteMarkers(markersArray);

  var showGeocodedAddressOnMap = function(asDestination) {
    var icon = asDestination ? destinationIcon : originIcon;
    return function(results, status) {
      if (status === 'OK') {
        map.fitBounds(bounds.extend(results[0].geometry.location));
        markersArray.push(new google.maps.Marker({
          map: map,
          position: results[0].geometry.location,
          icon: icon
        }));
      } //else {
        //alert('Geocode was not successful due to: ' + status);
      //}
    };
  };

  outputDiv.innerHTML +='<table>' + '<tr>'+'<th>Address</th>'+'<th>Distance</th>'+'<th>Time</th>'+'</tr>';
  for (var i = 0; i < originList.length; i++) {
    var results = response.rows[i].elements;
    geocoder.geocode({'address': originList[i]},
        showGeocodedAddressOnMap(false));
    for (var j = 0; j < results.length; j++) {
      geocoder.geocode({'address': destinationList[j]},
          showGeocodedAddressOnMap(true));
      outputDiv.innerHTML += '<table><tr>' + '<td>' + destinationList[j] + '</td>'+ '<td>' + results[j].distance.text + '</td>'+ '<td>' + results[j].duration.text + '</td>' + '</tr>';
      // outputDiv.innerHTML += originList[i] + ' to ' + destinationList[j] +
      //     ': ' + results[j].distance.text + ' in ' +
      //     results[j].duration.text + '<br>';
    }
  }
  //outputDiv.innerHTML +='</table>';
}
});
}

function deleteMarkers(markersArray) {
for (var i = 0; i < markersArray.length; i++) {
markersArray[i].setMap(null);
}
markersArray = [];
}
</script>
<script async defer
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAESVZkEV6W30DcS-QlzpIVkluBPNv3DXs&callback=initMap">
</script>
</body>
</html>
